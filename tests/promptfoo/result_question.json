{
  "evalId": "eval-IFs-2025-07-24T03:57:07",
  "results": {
    "version": 3,
    "timestamp": "2025-07-24T03:57:07.446Z",
    "prompts": [
      {
        "raw": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n{{title}}\n\n{{content}}\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n",
        "label": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n{{title}}\n\n{{content}}\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n",
        "id": "59c69ad22e409ccfdd9e54cdd629523215acbb7e6ccd9e2cd8f23b2b9c25de54",
        "provider": "openai:gpt-4o",
        "metrics": {
          "score": 5,
          "testPassCount": 3,
          "testFailCount": 4,
          "testErrorCount": 0,
          "assertPassCount": 11,
          "assertFailCount": 4,
          "totalLatencyMs": 40,
          "tokenUsage": {
            "total": 2443,
            "prompt": 0,
            "completion": 0,
            "cached": 2443,
            "numRequests": 7,
            "completionDetails": {
              "reasoning": 0,
              "acceptedPrediction": 0,
              "rejectedPrediction": 0
            },
            "assertions": {
              "total": 0,
              "prompt": 0,
              "completion": 0,
              "cached": 0
            }
          },
          "namedScores": {},
          "namedScoresCount": {},
          "cost": 0.013142500000000001
        }
      }
    ],
    "results": [
      {
        "cost": 0.0018775,
        "error": "Custom function returned false\nconst result = JSON.parse(output);\n// Check structure\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3) return false;\nif (result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions quality\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasFactualElements = \n  summaryQuestions.includes('price') || \n  summaryQuestions.includes('features') || \n  summaryQuestions.includes('battery') ||\n  summaryQuestions.includes('reviews') ||\n  summaryQuestions.includes('units');\n\n// Check discussion questions quality\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst hasPersonalElements = \n  discussionQuestions.includes('you') || \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('experience') ||\n  discussionQuestions.includes('think') ||\n  discussionQuestions.includes('opinion');\n\nreturn hasFactualElements && hasPersonalElements;",
        "gradingResult": {
          "pass": false,
          "score": 0.5,
          "reason": "Custom function returned false\nconst result = JSON.parse(output);\n// Check structure\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3) return false;\nif (result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions quality\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasFactualElements = \n  summaryQuestions.includes('price') || \n  summaryQuestions.includes('features') || \n  summaryQuestions.includes('battery') ||\n  summaryQuestions.includes('reviews') ||\n  summaryQuestions.includes('units');\n\n// Check discussion questions quality\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst hasPersonalElements = \n  discussionQuestions.includes('you') || \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('experience') ||\n  discussionQuestions.includes('think') ||\n  discussionQuestions.includes('opinion');\n\nreturn hasFactualElements && hasPersonalElements;",
          "namedScores": {},
          "tokensUsed": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0
          },
          "componentResults": [
            {
              "pass": true,
              "score": 1,
              "reason": "Assertion passed",
              "assertion": {
                "type": "is-json"
              }
            },
            {
              "pass": false,
              "score": 0,
              "reason": "Custom function returned false\nconst result = JSON.parse(output);\n// Check structure\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3) return false;\nif (result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions quality\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasFactualElements = \n  summaryQuestions.includes('price') || \n  summaryQuestions.includes('features') || \n  summaryQuestions.includes('battery') ||\n  summaryQuestions.includes('reviews') ||\n  summaryQuestions.includes('units');\n\n// Check discussion questions quality\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst hasPersonalElements = \n  discussionQuestions.includes('you') || \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('experience') ||\n  discussionQuestions.includes('think') ||\n  discussionQuestions.includes('opinion');\n\nreturn hasFactualElements && hasPersonalElements;",
              "assertion": {
                "type": "javascript",
                "value": "const result = JSON.parse(output);\n// Check structure\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3) return false;\nif (result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions quality\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasFactualElements = \n  summaryQuestions.includes('price') || \n  summaryQuestions.includes('features') || \n  summaryQuestions.includes('battery') ||\n  summaryQuestions.includes('reviews') ||\n  summaryQuestions.includes('units');\n\n// Check discussion questions quality\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst hasPersonalElements = \n  discussionQuestions.includes('you') || \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('experience') ||\n  discussionQuestions.includes('think') ||\n  discussionQuestions.includes('opinion');\n\nreturn hasFactualElements && hasPersonalElements;\n"
              }
            }
          ],
          "assertion": null
        },
        "id": "451cfcbc-d09f-4040-99a1-69caabd018c7",
        "latencyMs": 7,
        "namedScores": {},
        "prompt": {
          "raw": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n\n\n\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n",
          "label": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n{{title}}\n\n{{content}}\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n"
        },
        "promptId": "59c69ad22e409ccfdd9e54cdd629523215acbb7e6ccd9e2cd8f23b2b9c25de54",
        "promptIdx": 0,
        "provider": {
          "id": "openai:gpt-4o",
          "label": ""
        },
        "response": {
          "output": "{\n    \"summaryQuestions\": [\n        \"What is the article's main idea or point it is trying to convey?\",\n        \"What supporting details or examples are used to reinforce the main idea in the article?\",\n        \"What sequence of events or causes and effects are described in the article?\"\n    ],\n    \"discussionQuestions\": [\n        \"How does the situation or topic discussed in the article relate to your personal experiences?\",\n        \"What is your opinion on the issue presented in the article, and do you agree or disagree with it?\",\n        \"How can the information or perspectives in the article be applied to real-world situations or contexts you are familiar with?\"\n    ]\n}",
          "tokenUsage": {
            "cached": 349,
            "total": 349
          },
          "cached": true,
          "finishReason": "stop",
          "cost": 0.0018775
        },
        "score": 0.5,
        "success": false,
        "testCase": {
          "description": "Test with technology news article",
          "vars": {
            "article": "Apple announced its new Vision Pro headset yesterday at a price of $3,499. The device features advanced eye-tracking technology, hand gesture recognition, and a custom R1 chip for processing. Early reviews praise the display quality but criticize the weight and battery life of only 2 hours. Apple expects to sell 400,000 units in the first year, targeting professionals and early adopters. The company plans to release a cheaper version in 2025."
          },
          "assert": [
            {
              "type": "is-json"
            },
            {
              "type": "javascript",
              "value": "const result = JSON.parse(output);\n// Check structure\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3) return false;\nif (result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions quality\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasFactualElements = \n  summaryQuestions.includes('price') || \n  summaryQuestions.includes('features') || \n  summaryQuestions.includes('battery') ||\n  summaryQuestions.includes('reviews') ||\n  summaryQuestions.includes('units');\n\n// Check discussion questions quality\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst hasPersonalElements = \n  discussionQuestions.includes('you') || \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('experience') ||\n  discussionQuestions.includes('think') ||\n  discussionQuestions.includes('opinion');\n\nreturn hasFactualElements && hasPersonalElements;\n"
            }
          ],
          "options": {},
          "metadata": {}
        },
        "testIdx": 0,
        "vars": {
          "article": "Apple announced its new Vision Pro headset yesterday at a price of $3,499. The device features advanced eye-tracking technology, hand gesture recognition, and a custom R1 chip for processing. Early reviews praise the display quality but criticize the weight and battery life of only 2 hours. Apple expects to sell 400,000 units in the first year, targeting professionals and early adopters. The company plans to release a cheaper version in 2025."
        },
        "metadata": {
          "_promptfooFileMetadata": {}
        },
        "failureReason": 1
      },
      {
        "cost": 0.0018775,
        "error": "Custom function returned false\nconst result = JSON.parse(output);\n// Basic structure check\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check for environmental topic coverage\nconst allQuestions = [...result.summaryQuestions, ...result.discussionQuestions].join(' ').toLowerCase();\nconst hasRelevantContent = \n  allQuestions.includes('temperature') || \n  allQuestions.includes('coral') || \n  allQuestions.includes('ocean') ||\n  allQuestions.includes('climate') ||\n  allQuestions.includes('environment');\n\nreturn hasRelevantContent;",
        "gradingResult": {
          "pass": false,
          "score": 0.5,
          "reason": "Custom function returned false\nconst result = JSON.parse(output);\n// Basic structure check\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check for environmental topic coverage\nconst allQuestions = [...result.summaryQuestions, ...result.discussionQuestions].join(' ').toLowerCase();\nconst hasRelevantContent = \n  allQuestions.includes('temperature') || \n  allQuestions.includes('coral') || \n  allQuestions.includes('ocean') ||\n  allQuestions.includes('climate') ||\n  allQuestions.includes('environment');\n\nreturn hasRelevantContent;",
          "namedScores": {},
          "tokensUsed": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0
          },
          "componentResults": [
            {
              "pass": true,
              "score": 1,
              "reason": "Assertion passed",
              "assertion": {
                "type": "is-json"
              }
            },
            {
              "pass": false,
              "score": 0,
              "reason": "Custom function returned false\nconst result = JSON.parse(output);\n// Basic structure check\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check for environmental topic coverage\nconst allQuestions = [...result.summaryQuestions, ...result.discussionQuestions].join(' ').toLowerCase();\nconst hasRelevantContent = \n  allQuestions.includes('temperature') || \n  allQuestions.includes('coral') || \n  allQuestions.includes('ocean') ||\n  allQuestions.includes('climate') ||\n  allQuestions.includes('environment');\n\nreturn hasRelevantContent;",
              "assertion": {
                "type": "javascript",
                "value": "const result = JSON.parse(output);\n// Basic structure check\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check for environmental topic coverage\nconst allQuestions = [...result.summaryQuestions, ...result.discussionQuestions].join(' ').toLowerCase();\nconst hasRelevantContent = \n  allQuestions.includes('temperature') || \n  allQuestions.includes('coral') || \n  allQuestions.includes('ocean') ||\n  allQuestions.includes('climate') ||\n  allQuestions.includes('environment');\n\nreturn hasRelevantContent;\n"
              }
            }
          ],
          "assertion": null
        },
        "id": "b649d2eb-1990-4d82-a69f-b87e729dabe4",
        "latencyMs": 9,
        "namedScores": {},
        "prompt": {
          "raw": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n\n\n\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n",
          "label": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n{{title}}\n\n{{content}}\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n"
        },
        "promptId": "59c69ad22e409ccfdd9e54cdd629523215acbb7e6ccd9e2cd8f23b2b9c25de54",
        "promptIdx": 0,
        "provider": {
          "id": "openai:gpt-4o",
          "label": ""
        },
        "response": {
          "output": "{\n    \"summaryQuestions\": [\n        \"What is the article's main idea or point it is trying to convey?\",\n        \"What supporting details or examples are used to reinforce the main idea in the article?\",\n        \"What sequence of events or causes and effects are described in the article?\"\n    ],\n    \"discussionQuestions\": [\n        \"How does the situation or topic discussed in the article relate to your personal experiences?\",\n        \"What is your opinion on the issue presented in the article, and do you agree or disagree with it?\",\n        \"How can the information or perspectives in the article be applied to real-world situations or contexts you are familiar with?\"\n    ]\n}",
          "tokenUsage": {
            "cached": 349,
            "total": 349
          },
          "cached": true,
          "finishReason": "stop",
          "cost": 0.0018775
        },
        "score": 0.5,
        "success": false,
        "testCase": {
          "description": "Test with environmental news article",
          "vars": {
            "article": "A new study reveals that ocean temperatures have risen by 0.5 degrees Celsius over the past decade, affecting marine ecosystems worldwide. Coral reefs in Australia have experienced three major bleaching events since 2016. Scientists report that 14% of coral reefs have been lost globally. The study suggests immediate action is needed, including reducing carbon emissions by 45% by 2030. Local communities are implementing reef restoration projects using heat-resistant coral species."
          },
          "assert": [
            {
              "type": "is-json"
            },
            {
              "type": "javascript",
              "value": "const result = JSON.parse(output);\n// Basic structure check\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check for environmental topic coverage\nconst allQuestions = [...result.summaryQuestions, ...result.discussionQuestions].join(' ').toLowerCase();\nconst hasRelevantContent = \n  allQuestions.includes('temperature') || \n  allQuestions.includes('coral') || \n  allQuestions.includes('ocean') ||\n  allQuestions.includes('climate') ||\n  allQuestions.includes('environment');\n\nreturn hasRelevantContent;\n"
            }
          ],
          "options": {},
          "metadata": {}
        },
        "testIdx": 1,
        "vars": {
          "article": "A new study reveals that ocean temperatures have risen by 0.5 degrees Celsius over the past decade, affecting marine ecosystems worldwide. Coral reefs in Australia have experienced three major bleaching events since 2016. Scientists report that 14% of coral reefs have been lost globally. The study suggests immediate action is needed, including reducing carbon emissions by 45% by 2030. Local communities are implementing reef restoration projects using heat-resistant coral species."
        },
        "metadata": {
          "_promptfooFileMetadata": {}
        },
        "failureReason": 1
      },
      {
        "cost": 0.0018775,
        "error": "Custom function returned false\nconst result = JSON.parse(output);\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions target facts\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasStatistics = \n  summaryQuestions.includes('percent') || \n  summaryQuestions.includes('%') || \n  summaryQuestions.includes('survey') ||\n  summaryQuestions.includes('study');\n\n// Check discussion questions are personal\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst isPersonal = \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('you');\n\nreturn hasStatistics && isPersonal;",
        "gradingResult": {
          "pass": false,
          "score": 0.5,
          "reason": "Custom function returned false\nconst result = JSON.parse(output);\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions target facts\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasStatistics = \n  summaryQuestions.includes('percent') || \n  summaryQuestions.includes('%') || \n  summaryQuestions.includes('survey') ||\n  summaryQuestions.includes('study');\n\n// Check discussion questions are personal\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst isPersonal = \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('you');\n\nreturn hasStatistics && isPersonal;",
          "namedScores": {},
          "tokensUsed": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0
          },
          "componentResults": [
            {
              "pass": true,
              "score": 1,
              "reason": "Assertion passed",
              "assertion": {
                "type": "is-json"
              }
            },
            {
              "pass": false,
              "score": 0,
              "reason": "Custom function returned false\nconst result = JSON.parse(output);\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions target facts\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasStatistics = \n  summaryQuestions.includes('percent') || \n  summaryQuestions.includes('%') || \n  summaryQuestions.includes('survey') ||\n  summaryQuestions.includes('study');\n\n// Check discussion questions are personal\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst isPersonal = \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('you');\n\nreturn hasStatistics && isPersonal;",
              "assertion": {
                "type": "javascript",
                "value": "const result = JSON.parse(output);\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions target facts\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasStatistics = \n  summaryQuestions.includes('percent') || \n  summaryQuestions.includes('%') || \n  summaryQuestions.includes('survey') ||\n  summaryQuestions.includes('study');\n\n// Check discussion questions are personal\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst isPersonal = \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('you');\n\nreturn hasStatistics && isPersonal;\n"
              }
            }
          ],
          "assertion": null
        },
        "id": "bcdaabe8-3a89-4135-a38c-e2b83ceced7c",
        "latencyMs": 9,
        "namedScores": {},
        "prompt": {
          "raw": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n\n\n\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n",
          "label": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n{{title}}\n\n{{content}}\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n"
        },
        "promptId": "59c69ad22e409ccfdd9e54cdd629523215acbb7e6ccd9e2cd8f23b2b9c25de54",
        "promptIdx": 0,
        "provider": {
          "id": "openai:gpt-4o",
          "label": ""
        },
        "response": {
          "output": "{\n    \"summaryQuestions\": [\n        \"What is the article's main idea or point it is trying to convey?\",\n        \"What supporting details or examples are used to reinforce the main idea in the article?\",\n        \"What sequence of events or causes and effects are described in the article?\"\n    ],\n    \"discussionQuestions\": [\n        \"How does the situation or topic discussed in the article relate to your personal experiences?\",\n        \"What is your opinion on the issue presented in the article, and do you agree or disagree with it?\",\n        \"How can the information or perspectives in the article be applied to real-world situations or contexts you are familiar with?\"\n    ]\n}",
          "tokenUsage": {
            "cached": 349,
            "total": 349
          },
          "cached": true,
          "finishReason": "stop",
          "cost": 0.0018775
        },
        "score": 0.5,
        "success": false,
        "testCase": {
          "description": "Test with social issue article",
          "vars": {
            "article": "A recent survey shows that 67% of remote workers report better work-life balance compared to office workers. However, 45% feel more isolated and miss casual office interactions. Companies are experimenting with hybrid models, requiring 2-3 days in office per week. The study found productivity increased by 13% for remote workers, but creativity and innovation metrics dropped by 8%. Mental health support requests have increased by 25% since widespread remote work adoption in 2020."
          },
          "assert": [
            {
              "type": "is-json"
            },
            {
              "type": "javascript",
              "value": "const result = JSON.parse(output);\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions target facts\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasStatistics = \n  summaryQuestions.includes('percent') || \n  summaryQuestions.includes('%') || \n  summaryQuestions.includes('survey') ||\n  summaryQuestions.includes('study');\n\n// Check discussion questions are personal\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst isPersonal = \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('you');\n\nreturn hasStatistics && isPersonal;\n"
            }
          ],
          "options": {},
          "metadata": {}
        },
        "testIdx": 2,
        "vars": {
          "article": "A recent survey shows that 67% of remote workers report better work-life balance compared to office workers. However, 45% feel more isolated and miss casual office interactions. Companies are experimenting with hybrid models, requiring 2-3 days in office per week. The study found productivity increased by 13% for remote workers, but creativity and innovation metrics dropped by 8%. Mental health support requests have increased by 25% since widespread remote work adoption in 2020."
        },
        "metadata": {
          "_promptfooFileMetadata": {}
        },
        "failureReason": 1
      },
      {
        "cost": 0.0018775,
        "gradingResult": {
          "pass": true,
          "score": 1,
          "reason": "All assertions passed",
          "namedScores": {},
          "tokensUsed": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0
          },
          "componentResults": [
            {
              "pass": true,
              "score": 1,
              "reason": "Assertion passed",
              "assertion": {
                "type": "is-json"
              }
            },
            {
              "pass": true,
              "score": 1,
              "reason": "Assertion passed",
              "assertion": {
                "type": "contains-all",
                "value": [
                  "summaryQuestions",
                  "discussionQuestions"
                ]
              }
            },
            {
              "pass": true,
              "score": 1,
              "reason": "Assertion passed",
              "assertion": {
                "type": "javascript",
                "value": "const result = JSON.parse(output);\n// Verify all questions are present and non-empty\nconst allQuestionsPresent = \n  result.summaryQuestions.every(q => q && q.length > 10) &&\n  result.discussionQuestions.every(q => q && q.length > 10);\n\nreturn allQuestionsPresent;\n"
              }
            }
          ],
          "assertion": null
        },
        "id": "81553b93-3393-4db4-bc1a-0a59db9347a5",
        "latencyMs": 9,
        "namedScores": {},
        "prompt": {
          "raw": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n\n\n\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n",
          "label": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n{{title}}\n\n{{content}}\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n"
        },
        "promptId": "59c69ad22e409ccfdd9e54cdd629523215acbb7e6ccd9e2cd8f23b2b9c25de54",
        "promptIdx": 0,
        "provider": {
          "id": "openai:gpt-4o",
          "label": ""
        },
        "response": {
          "output": "{\n    \"summaryQuestions\": [\n        \"What is the article's main idea or point it is trying to convey?\",\n        \"What supporting details or examples are used to reinforce the main idea in the article?\",\n        \"What sequence of events or causes and effects are described in the article?\"\n    ],\n    \"discussionQuestions\": [\n        \"How does the situation or topic discussed in the article relate to your personal experiences?\",\n        \"What is your opinion on the issue presented in the article, and do you agree or disagree with it?\",\n        \"How can the information or perspectives in the article be applied to real-world situations or contexts you are familiar with?\"\n    ]\n}",
          "tokenUsage": {
            "cached": 349,
            "total": 349
          },
          "cached": true,
          "finishReason": "stop",
          "cost": 0.0018775
        },
        "score": 1,
        "success": true,
        "testCase": {
          "description": "Test with health/medical article",
          "vars": {
            "article": "Researchers have developed a new vaccine that shows 89% effectiveness against a common respiratory virus. The vaccine uses mRNA technology and requires two doses, 21 days apart. Clinical trials involved 30,000 participants across 15 countries. Side effects were mild, including fatigue (65%), headache (42%), and muscle pain (38%). The vaccine can be stored at standard refrigerator temperatures, making distribution easier. Health officials plan to recommend it for adults over 60 and those with chronic conditions."
          },
          "assert": [
            {
              "type": "is-json"
            },
            {
              "type": "contains-all",
              "value": [
                "summaryQuestions",
                "discussionQuestions"
              ]
            },
            {
              "type": "javascript",
              "value": "const result = JSON.parse(output);\n// Verify all questions are present and non-empty\nconst allQuestionsPresent = \n  result.summaryQuestions.every(q => q && q.length > 10) &&\n  result.discussionQuestions.every(q => q && q.length > 10);\n\nreturn allQuestionsPresent;\n"
            }
          ],
          "options": {},
          "metadata": {}
        },
        "testIdx": 3,
        "vars": {
          "article": "Researchers have developed a new vaccine that shows 89% effectiveness against a common respiratory virus. The vaccine uses mRNA technology and requires two doses, 21 days apart. Clinical trials involved 30,000 participants across 15 countries. Side effects were mild, including fatigue (65%), headache (42%), and muscle pain (38%). The vaccine can be stored at standard refrigerator temperatures, making distribution easier. Health officials plan to recommend it for adults over 60 and those with chronic conditions."
        },
        "metadata": {
          "_promptfooFileMetadata": {}
        },
        "failureReason": 0
      },
      {
        "cost": 0.0018775,
        "error": "Custom function returned false\nconst result = JSON.parse(output);\n\n// Check question differentiation\nconst summaryQs = result.summaryQuestions.join(' ');\nconst discussionQs = result.discussionQuestions.join(' ');\n\n// Summary questions should focus on facts\nconst summaryHasFacts = \n  summaryQs.includes('Finland') || \n  summaryQs.includes('rank') || \n  summaryQs.includes('factors') ||\n  summaryQs.includes('teachers') ||\n  summaryQs.includes('students');\n\n// Discussion questions should be different from summary\nconst questionsAreDifferent = \n  result.summaryQuestions[0] !== result.discussionQuestions[0];\n\nreturn summaryHasFacts && questionsAreDifferent;",
        "gradingResult": {
          "pass": false,
          "score": 0.5,
          "reason": "Custom function returned false\nconst result = JSON.parse(output);\n\n// Check question differentiation\nconst summaryQs = result.summaryQuestions.join(' ');\nconst discussionQs = result.discussionQuestions.join(' ');\n\n// Summary questions should focus on facts\nconst summaryHasFacts = \n  summaryQs.includes('Finland') || \n  summaryQs.includes('rank') || \n  summaryQs.includes('factors') ||\n  summaryQs.includes('teachers') ||\n  summaryQs.includes('students');\n\n// Discussion questions should be different from summary\nconst questionsAreDifferent = \n  result.summaryQuestions[0] !== result.discussionQuestions[0];\n\nreturn summaryHasFacts && questionsAreDifferent;",
          "namedScores": {},
          "tokensUsed": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0
          },
          "componentResults": [
            {
              "pass": true,
              "score": 1,
              "reason": "Assertion passed",
              "assertion": {
                "type": "is-json"
              }
            },
            {
              "pass": false,
              "score": 0,
              "reason": "Custom function returned false\nconst result = JSON.parse(output);\n\n// Check question differentiation\nconst summaryQs = result.summaryQuestions.join(' ');\nconst discussionQs = result.discussionQuestions.join(' ');\n\n// Summary questions should focus on facts\nconst summaryHasFacts = \n  summaryQs.includes('Finland') || \n  summaryQs.includes('rank') || \n  summaryQs.includes('factors') ||\n  summaryQs.includes('teachers') ||\n  summaryQs.includes('students');\n\n// Discussion questions should be different from summary\nconst questionsAreDifferent = \n  result.summaryQuestions[0] !== result.discussionQuestions[0];\n\nreturn summaryHasFacts && questionsAreDifferent;",
              "assertion": {
                "type": "javascript",
                "value": "const result = JSON.parse(output);\n\n// Check question differentiation\nconst summaryQs = result.summaryQuestions.join(' ');\nconst discussionQs = result.discussionQuestions.join(' ');\n\n// Summary questions should focus on facts\nconst summaryHasFacts = \n  summaryQs.includes('Finland') || \n  summaryQs.includes('rank') || \n  summaryQs.includes('factors') ||\n  summaryQs.includes('teachers') ||\n  summaryQs.includes('students');\n\n// Discussion questions should be different from summary\nconst questionsAreDifferent = \n  result.summaryQuestions[0] !== result.discussionQuestions[0];\n\nreturn summaryHasFacts && questionsAreDifferent;\n"
              }
            }
          ],
          "assertion": null
        },
        "id": "433a8969-4451-4fe7-bc3d-637755b40e92",
        "latencyMs": 2,
        "namedScores": {},
        "prompt": {
          "raw": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n\n\n\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n",
          "label": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n{{title}}\n\n{{content}}\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n"
        },
        "promptId": "59c69ad22e409ccfdd9e54cdd629523215acbb7e6ccd9e2cd8f23b2b9c25de54",
        "promptIdx": 0,
        "provider": {
          "id": "openai:gpt-4o",
          "label": ""
        },
        "response": {
          "output": "{\n    \"summaryQuestions\": [\n        \"What is the article's main idea or point it is trying to convey?\",\n        \"What supporting details or examples are used to reinforce the main idea in the article?\",\n        \"What sequence of events or causes and effects are described in the article?\"\n    ],\n    \"discussionQuestions\": [\n        \"How does the situation or topic discussed in the article relate to your personal experiences?\",\n        \"What is your opinion on the issue presented in the article, and do you agree or disagree with it?\",\n        \"How can the information or perspectives in the article be applied to real-world situations or contexts you are familiar with?\"\n    ]\n}",
          "tokenUsage": {
            "cached": 349,
            "total": 349
          },
          "cached": true,
          "finishReason": "stop",
          "cost": 0.0018775
        },
        "score": 0.5,
        "success": false,
        "testCase": {
          "description": "Test with education article",
          "vars": {
            "article": "Finland's education system ranks first globally for the fifth consecutive year. Key factors include no standardized testing until age 16, shorter school days (average 5 hours), and minimal homework. Teachers require master's degrees and are selected from the top 10% of graduates. The curriculum emphasizes creativity, critical thinking, and collaboration over memorization. Student-teacher ratios average 12:1. Despite less time in classroom, Finnish students outperform peers in mathematics, science, and reading comprehension."
          },
          "assert": [
            {
              "type": "is-json"
            },
            {
              "type": "javascript",
              "value": "const result = JSON.parse(output);\n\n// Check question differentiation\nconst summaryQs = result.summaryQuestions.join(' ');\nconst discussionQs = result.discussionQuestions.join(' ');\n\n// Summary questions should focus on facts\nconst summaryHasFacts = \n  summaryQs.includes('Finland') || \n  summaryQs.includes('rank') || \n  summaryQs.includes('factors') ||\n  summaryQs.includes('teachers') ||\n  summaryQs.includes('students');\n\n// Discussion questions should be different from summary\nconst questionsAreDifferent = \n  result.summaryQuestions[0] !== result.discussionQuestions[0];\n\nreturn summaryHasFacts && questionsAreDifferent;\n"
            }
          ],
          "options": {},
          "metadata": {}
        },
        "testIdx": 4,
        "vars": {
          "article": "Finland's education system ranks first globally for the fifth consecutive year. Key factors include no standardized testing until age 16, shorter school days (average 5 hours), and minimal homework. Teachers require master's degrees and are selected from the top 10% of graduates. The curriculum emphasizes creativity, critical thinking, and collaboration over memorization. Student-teacher ratios average 12:1. Despite less time in classroom, Finnish students outperform peers in mathematics, science, and reading comprehension."
        },
        "metadata": {
          "_promptfooFileMetadata": {}
        },
        "failureReason": 1
      },
      {
        "cost": 0.0018775,
        "gradingResult": {
          "pass": true,
          "score": 1,
          "reason": "All assertions passed",
          "namedScores": {},
          "tokensUsed": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0
          },
          "componentResults": [
            {
              "pass": true,
              "score": 1,
              "reason": "Assertion passed",
              "assertion": {
                "type": "is-json"
              }
            },
            {
              "pass": true,
              "score": 1,
              "reason": "Assertion passed",
              "assertion": {
                "type": "javascript",
                "value": "const result = JSON.parse(output);\n// Should still generate 6 questions even with limited content\nreturn result.summaryQuestions.length === 3 && result.discussionQuestions.length === 3;\n"
              }
            }
          ],
          "assertion": null
        },
        "id": "4d3782a4-10ab-41ac-a6cf-02467f17f39c",
        "latencyMs": 2,
        "namedScores": {},
        "prompt": {
          "raw": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n\n\n\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n",
          "label": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n{{title}}\n\n{{content}}\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n"
        },
        "promptId": "59c69ad22e409ccfdd9e54cdd629523215acbb7e6ccd9e2cd8f23b2b9c25de54",
        "promptIdx": 0,
        "provider": {
          "id": "openai:gpt-4o",
          "label": ""
        },
        "response": {
          "output": "{\n    \"summaryQuestions\": [\n        \"What is the article's main idea or point it is trying to convey?\",\n        \"What supporting details or examples are used to reinforce the main idea in the article?\",\n        \"What sequence of events or causes and effects are described in the article?\"\n    ],\n    \"discussionQuestions\": [\n        \"How does the situation or topic discussed in the article relate to your personal experiences?\",\n        \"What is your opinion on the issue presented in the article, and do you agree or disagree with it?\",\n        \"How can the information or perspectives in the article be applied to real-world situations or contexts you are familiar with?\"\n    ]\n}",
          "tokenUsage": {
            "cached": 349,
            "total": 349
          },
          "cached": true,
          "finishReason": "stop",
          "cost": 0.0018775
        },
        "score": 1,
        "success": true,
        "testCase": {
          "description": "Test with very short article",
          "vars": {
            "article": "Breaking: Earthquake magnitude 6.2 hits Japan. No tsunami warning issued. Minor damage reported."
          },
          "assert": [
            {
              "type": "is-json"
            },
            {
              "type": "javascript",
              "value": "const result = JSON.parse(output);\n// Should still generate 6 questions even with limited content\nreturn result.summaryQuestions.length === 3 && result.discussionQuestions.length === 3;\n"
            }
          ],
          "options": {},
          "metadata": {}
        },
        "testIdx": 5,
        "vars": {
          "article": "Breaking: Earthquake magnitude 6.2 hits Japan. No tsunami warning issued. Minor damage reported."
        },
        "metadata": {
          "_promptfooFileMetadata": {}
        },
        "failureReason": 0
      },
      {
        "cost": 0.0018775,
        "gradingResult": {
          "pass": true,
          "score": 1,
          "reason": "All assertions passed",
          "namedScores": {},
          "tokensUsed": {
            "total": 0,
            "prompt": 0,
            "completion": 0,
            "cached": 0
          },
          "componentResults": [
            {
              "pass": true,
              "score": 1,
              "reason": "Assertion passed",
              "assertion": {
                "type": "is-json"
              }
            },
            {
              "pass": true,
              "score": 1,
              "reason": "Assertion passed",
              "assertion": {
                "type": "javascript",
                "value": "const result = JSON.parse(output);\n\n// Check that complex content still generates accessible questions\nconst allQuestions = [...result.summaryQuestions, ...result.discussionQuestions];\n\n// At least some questions should be understandable for ESL students\nconst hasAccessibleLanguage = allQuestions.some(q => \n  !q.includes('GeV/c²') && \n  !q.includes('quantum') && \n  q.split(' ').length < 25  // Not overly complex\n);\n\nreturn hasAccessibleLanguage;\n"
              }
            }
          ],
          "assertion": null
        },
        "id": "6e99a038-c2b9-4a74-bdd1-0098ba9f099d",
        "latencyMs": 2,
        "namedScores": {},
        "prompt": {
          "raw": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n\n\n\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n",
          "label": "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n{{title}}\n\n{{content}}\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n"
        },
        "promptId": "59c69ad22e409ccfdd9e54cdd629523215acbb7e6ccd9e2cd8f23b2b9c25de54",
        "promptIdx": 0,
        "provider": {
          "id": "openai:gpt-4o",
          "label": ""
        },
        "response": {
          "output": "{\n    \"summaryQuestions\": [\n        \"What is the article's main idea or point it is trying to convey?\",\n        \"What supporting details or examples are used to reinforce the main idea in the article?\",\n        \"What sequence of events or causes and effects are described in the article?\"\n    ],\n    \"discussionQuestions\": [\n        \"How does the situation or topic discussed in the article relate to your personal experiences?\",\n        \"What is your opinion on the issue presented in the article, and do you agree or disagree with it?\",\n        \"How can the information or perspectives in the article be applied to real-world situations or contexts you are familiar with?\"\n    ]\n}",
          "tokenUsage": {
            "cached": 349,
            "total": 349
          },
          "cached": true,
          "finishReason": "stop",
          "cost": 0.0018775
        },
        "score": 1,
        "success": true,
        "testCase": {
          "description": "Test with technical/scientific article",
          "vars": {
            "article": "Scientists at CERN have discovered a new subatomic particle with a mass of 4.7 GeV/c². The particle, temporarily named X(4700), exhibits unusual quantum properties including simultaneous charm and anti-charm quark states. Detection required 10 million collision events analyzed by AI algorithms. The discovery challenges the Standard Model of particle physics. Theoretical physicists suggest this could lead to understanding dark matter, which comprises 85% of universe matter. Further experiments planned for 2025 using upgraded Large Hadron Collider."
          },
          "assert": [
            {
              "type": "is-json"
            },
            {
              "type": "javascript",
              "value": "const result = JSON.parse(output);\n\n// Check that complex content still generates accessible questions\nconst allQuestions = [...result.summaryQuestions, ...result.discussionQuestions];\n\n// At least some questions should be understandable for ESL students\nconst hasAccessibleLanguage = allQuestions.some(q => \n  !q.includes('GeV/c²') && \n  !q.includes('quantum') && \n  q.split(' ').length < 25  // Not overly complex\n);\n\nreturn hasAccessibleLanguage;\n"
            }
          ],
          "options": {},
          "metadata": {}
        },
        "testIdx": 6,
        "vars": {
          "article": "Scientists at CERN have discovered a new subatomic particle with a mass of 4.7 GeV/c². The particle, temporarily named X(4700), exhibits unusual quantum properties including simultaneous charm and anti-charm quark states. Detection required 10 million collision events analyzed by AI algorithms. The discovery challenges the Standard Model of particle physics. Theoretical physicists suggest this could lead to understanding dark matter, which comprises 85% of universe matter. Further experiments planned for 2025 using upgraded Large Hadron Collider."
        },
        "metadata": {
          "_promptfooFileMetadata": {}
        },
        "failureReason": 0
      }
    ],
    "stats": {
      "successes": 3,
      "failures": 4,
      "errors": 0,
      "tokenUsage": {
        "cached": 2443,
        "completion": 0,
        "prompt": 0,
        "total": 2443,
        "numRequests": 7,
        "completionDetails": {
          "reasoning": 0,
          "acceptedPrediction": 0,
          "rejectedPrediction": 0
        },
        "assertions": {
          "total": 0,
          "prompt": 0,
          "completion": 0,
          "cached": 0
        }
      }
    }
  },
  "config": {
    "tags": {},
    "description": "Test cases for ESL instructor question generation",
    "prompts": [
      "You are an Expert ESL instructor specializing in comprehension strategies. User will provide a news or article.  Please generate exactly: \n1. Three comprehension questions testing factual understanding\n   Example: \"What are the three main reasons mentioned for...\"\n    1) [Question focusing on main idea]\n    2) [Question about supporting details]\n    3) [Question about cause/effect or sequence]\n2. Three discussion questions connecting to personal experience\n   Example: \"How does this situation compare to your experience with...\"\n    1). [Personal connection question]\n    2). [Opinion/preference question]\n    3). [Real-world application question]\n\n{{title}}\n\n{{content}}\n\nOutput a JSON object.\n{\n    \"summaryQuestions\": [ // 3 questions for comprehension\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ],\n    \"discussionQuestions\": [// 3 questions for discussion\n        \"Question 1\",\n        \"Question 2\",\n        \"Question 3\"\n    ]\n}\n"
    ],
    "providers": [
      {
        "id": "openai:gpt-4o",
        "config": {
          "response_format": {
            "type": "json_object"
          }
        }
      }
    ],
    "tests": [
      {
        "description": "Test with technology news article",
        "vars": {
          "article": "Apple announced its new Vision Pro headset yesterday at a price of $3,499. The device features advanced eye-tracking technology, hand gesture recognition, and a custom R1 chip for processing. Early reviews praise the display quality but criticize the weight and battery life of only 2 hours. Apple expects to sell 400,000 units in the first year, targeting professionals and early adopters. The company plans to release a cheaper version in 2025.\n"
        },
        "assert": [
          {
            "type": "is-json"
          },
          {
            "type": "javascript",
            "value": "const result = JSON.parse(output);\n// Check structure\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3) return false;\nif (result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions quality\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasFactualElements = \n  summaryQuestions.includes('price') || \n  summaryQuestions.includes('features') || \n  summaryQuestions.includes('battery') ||\n  summaryQuestions.includes('reviews') ||\n  summaryQuestions.includes('units');\n\n// Check discussion questions quality\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst hasPersonalElements = \n  discussionQuestions.includes('you') || \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('experience') ||\n  discussionQuestions.includes('think') ||\n  discussionQuestions.includes('opinion');\n\nreturn hasFactualElements && hasPersonalElements;\n"
          }
        ]
      },
      {
        "description": "Test with environmental news article",
        "vars": {
          "article": "A new study reveals that ocean temperatures have risen by 0.5 degrees Celsius over the past decade, affecting marine ecosystems worldwide. Coral reefs in Australia have experienced three major bleaching events since 2016. Scientists report that 14% of coral reefs have been lost globally. The study suggests immediate action is needed, including reducing carbon emissions by 45% by 2030. Local communities are implementing reef restoration projects using heat-resistant coral species.\n"
        },
        "assert": [
          {
            "type": "is-json"
          },
          {
            "type": "javascript",
            "value": "const result = JSON.parse(output);\n// Basic structure check\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check for environmental topic coverage\nconst allQuestions = [...result.summaryQuestions, ...result.discussionQuestions].join(' ').toLowerCase();\nconst hasRelevantContent = \n  allQuestions.includes('temperature') || \n  allQuestions.includes('coral') || \n  allQuestions.includes('ocean') ||\n  allQuestions.includes('climate') ||\n  allQuestions.includes('environment');\n\nreturn hasRelevantContent;\n"
          }
        ]
      },
      {
        "description": "Test with social issue article",
        "vars": {
          "article": "A recent survey shows that 67% of remote workers report better work-life balance compared to office workers. However, 45% feel more isolated and miss casual office interactions. Companies are experimenting with hybrid models, requiring 2-3 days in office per week. The study found productivity increased by 13% for remote workers, but creativity and innovation metrics dropped by 8%. Mental health support requests have increased by 25% since widespread remote work adoption in 2020.\n"
        },
        "assert": [
          {
            "type": "is-json"
          },
          {
            "type": "javascript",
            "value": "const result = JSON.parse(output);\nif (!result.summaryQuestions || !result.discussionQuestions) return false;\nif (result.summaryQuestions.length !== 3 || result.discussionQuestions.length !== 3) return false;\n\n// Check comprehension questions target facts\nconst summaryQuestions = result.summaryQuestions.join(' ').toLowerCase();\nconst hasStatistics = \n  summaryQuestions.includes('percent') || \n  summaryQuestions.includes('%') || \n  summaryQuestions.includes('survey') ||\n  summaryQuestions.includes('study');\n\n// Check discussion questions are personal\nconst discussionQuestions = result.discussionQuestions.join(' ').toLowerCase();\nconst isPersonal = \n  discussionQuestions.includes('your') || \n  discussionQuestions.includes('you');\n\nreturn hasStatistics && isPersonal;\n"
          }
        ]
      },
      {
        "description": "Test with health/medical article",
        "vars": {
          "article": "Researchers have developed a new vaccine that shows 89% effectiveness against a common respiratory virus. The vaccine uses mRNA technology and requires two doses, 21 days apart. Clinical trials involved 30,000 participants across 15 countries. Side effects were mild, including fatigue (65%), headache (42%), and muscle pain (38%). The vaccine can be stored at standard refrigerator temperatures, making distribution easier. Health officials plan to recommend it for adults over 60 and those with chronic conditions.\n"
        },
        "assert": [
          {
            "type": "is-json"
          },
          {
            "type": "contains-all",
            "value": [
              "summaryQuestions",
              "discussionQuestions"
            ]
          },
          {
            "type": "javascript",
            "value": "const result = JSON.parse(output);\n// Verify all questions are present and non-empty\nconst allQuestionsPresent = \n  result.summaryQuestions.every(q => q && q.length > 10) &&\n  result.discussionQuestions.every(q => q && q.length > 10);\n\nreturn allQuestionsPresent;\n"
          }
        ]
      },
      {
        "description": "Test with education article",
        "vars": {
          "article": "Finland's education system ranks first globally for the fifth consecutive year. Key factors include no standardized testing until age 16, shorter school days (average 5 hours), and minimal homework. Teachers require master's degrees and are selected from the top 10% of graduates. The curriculum emphasizes creativity, critical thinking, and collaboration over memorization. Student-teacher ratios average 12:1. Despite less time in classroom, Finnish students outperform peers in mathematics, science, and reading comprehension.\n"
        },
        "assert": [
          {
            "type": "is-json"
          },
          {
            "type": "javascript",
            "value": "const result = JSON.parse(output);\n\n// Check question differentiation\nconst summaryQs = result.summaryQuestions.join(' ');\nconst discussionQs = result.discussionQuestions.join(' ');\n\n// Summary questions should focus on facts\nconst summaryHasFacts = \n  summaryQs.includes('Finland') || \n  summaryQs.includes('rank') || \n  summaryQs.includes('factors') ||\n  summaryQs.includes('teachers') ||\n  summaryQs.includes('students');\n\n// Discussion questions should be different from summary\nconst questionsAreDifferent = \n  result.summaryQuestions[0] !== result.discussionQuestions[0];\n\nreturn summaryHasFacts && questionsAreDifferent;\n"
          }
        ]
      },
      {
        "description": "Test with very short article",
        "vars": {
          "article": "Breaking: Earthquake magnitude 6.2 hits Japan. No tsunami warning issued. Minor damage reported."
        },
        "assert": [
          {
            "type": "is-json"
          },
          {
            "type": "javascript",
            "value": "const result = JSON.parse(output);\n// Should still generate 6 questions even with limited content\nreturn result.summaryQuestions.length === 3 && result.discussionQuestions.length === 3;\n"
          }
        ]
      },
      {
        "description": "Test with technical/scientific article",
        "vars": {
          "article": "Scientists at CERN have discovered a new subatomic particle with a mass of 4.7 GeV/c². The particle, temporarily named X(4700), exhibits unusual quantum properties including simultaneous charm and anti-charm quark states. Detection required 10 million collision events analyzed by AI algorithms. The discovery challenges the Standard Model of particle physics. Theoretical physicists suggest this could lead to understanding dark matter, which comprises 85% of universe matter. Further experiments planned for 2025 using upgraded Large Hadron Collider.\n"
        },
        "assert": [
          {
            "type": "is-json"
          },
          {
            "type": "javascript",
            "value": "const result = JSON.parse(output);\n\n// Check that complex content still generates accessible questions\nconst allQuestions = [...result.summaryQuestions, ...result.discussionQuestions];\n\n// At least some questions should be understandable for ESL students\nconst hasAccessibleLanguage = allQuestions.some(q => \n  !q.includes('GeV/c²') && \n  !q.includes('quantum') && \n  q.split(' ').length < 25  // Not overly complex\n);\n\nreturn hasAccessibleLanguage;\n"
          }
        ]
      }
    ],
    "scenarios": [],
    "env": {},
    "sharing": true,
    "outputPath": [
      "result_question.json"
    ],
    "extensions": [],
    "metadata": {}
  },
  "shareableUrl": null
}